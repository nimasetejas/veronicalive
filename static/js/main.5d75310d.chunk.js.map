{"version":3,"sources":["utils/history.ts","style/colors.ts","screens/Profile.tsx","screens/Dashboard.tsx","store/DashboardStore.ts","component/VeronicaTextInput.tsx","screens/auth/Login.tsx","store/LoginStore.ts","screens/auth/Register.tsx","screens/tabs/Home.tsx","routes.ts","screens/tabs/Products.tsx","screens/tabs/ProductDetails.tsx","screens/tabs/Cart.tsx","screens/tabs/About.tsx","screens/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createBrowserHistory","forceRefresh","Colors","veronica","lightVeronica","white","black","red","gray","darkBlue","Profile","observer","props","handleClose","onClose","Modal","show","showModal","onHide","className","Header","closeButton","icon","faUserCog","Body","type","onClick","onLogout","Footer","style","color","store","name","rollNo","editProfile","onChangeName","text","console","log","onChangeRollNo","value","history","push","closeModal","makeAutoObservable","this","Dashboard","size","VeronicaTextInput","minWidth","textAlign","label","onChange","e","target","username","password","isInvalid","user","newTestObject","setUserName","setPassword","login","Object","assign","toJS","trim","Login","location","useLocation","parse","search","Register","Home","routes","path","component","defaultTab","vertical","tabFor","tabId","NavBar","useState","setShowModal","handleModal","Navbar","expand","sticky","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","activeKey","pathname","Link","faStore","faCartPlus","faInfoCircle","NavItem","App","routeComponents","map","key","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d75310d.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\nexport default createBrowserHistory({forceRefresh:true});\n","const Colors = {\n    veronica: '#7143e3',\n    lightVeronica: '#9535e1',\n\n    white: '#ffffff',\n    black: '#000000',\n    red: '#DC143C',\n    gray: '#7C7C7D',\n    darkBlue: '#483D8B'\n}\nexport default Colors\n","import React, {FunctionComponent} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Colors from \"../style/colors\";\nimport {faUserCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ninterface IProfileProps {\n    showModal?: boolean;\n    onLogout?: Function;\n    onClose?: Function;\n}\n\nconst Profile: FunctionComponent<IProfileProps> = observer((props: any) => {\n    const handleClose = () => {\n        props.onClose && props.onClose();\n    }\n    return (\n        <Modal show={props.showModal} onHide={handleClose} className={'text-right'}>\n            <Modal.Header closeButton> <span>Profile <FontAwesomeIcon icon={faUserCog}/></span></Modal.Header>\n            <Modal.Body>\n                <div className={'text-center'}>\n                <button className={'border border-secondary rounded py-2 px-4 align-self-baseline'} type={\"submit\"} onClick={props.onLogout}>Logout</button>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <button className={'border border-secondary rounded py-1 px-3'} onClick={handleClose}>\n                    Close\n                </button>\n                <button className={'border border-success rounded bg-success py-1 px-3'} style={{color:Colors.white}} onClick={handleClose}>\n                    Save\n                </button>\n            </Modal.Footer>\n        </Modal>)\n})\n\nexport default Profile;\n","import {FunctionComponent} from \"react\";\nimport React from 'react'\nimport {observer} from \"mobx-react-lite\";\nimport DashboardStore from \"../store/DashboardStore\";\nimport {Tab, Tabs, TabList, TabPanel} from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport Home from \"./tabs/Home\";\nimport Products from \"./tabs/Products\";\nimport Cart from \"./tabs/Cart\";\nimport About from \"./tabs/About\";\nimport Colors from \"../style/colors\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faUserCog, faHome, faShoppingCart, faStore, faInfoCircle} from '@fortawesome/free-solid-svg-icons'\nimport Profile from \"./Profile\";\nimport '../style/commonStyle.css'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\n\n\nconst store: DashboardStore = new DashboardStore();\nconst Dashboard: FunctionComponent = observer((props: any) => {\n    return (<>\n            <div className={'px-3 py-3'}>\n                <h3\n                    className={'justify-content-center mx-auto flex-md-column'}\n                    style={{'color': Colors.veronica}}>Veronica\n                </h3>\n                <div className={'text-right px-2 -mouse-pointer cursor-pointer'}\n                     onClick={() => store.editProfile = !store.editProfile}>\n                    <FontAwesomeIcon color={Colors.veronica} size={'lg'} icon={faUserCog}/></div>\n            </div>\n{/*            <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n                <Navbar.Brand href=\"/home\">Veronica</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/products\">Link</Nav.Link>\n                        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>*/}\n           {/* <nav className=\"navbar navbar-inverse\">\n                <div className={'text-right px-2 -mouse-pointer cursor-pointer'}\n                     onClick={() => store.editProfile = !store.editProfile}>\n                    <FontAwesomeIcon color={Colors.veronica} size={'lg'} icon={faUserCog}/></div>\n                <div className={'text-right px-2 -mouse-pointer cursor-pointer'}\n                     onClick={() => store.editProfile = !store.editProfile}>\n                    <FontAwesomeIcon color={Colors.veronica} size={'lg'} icon={faUserCog}/></div>\n                <div className={'text-right px-2 -mouse-pointer cursor-pointer'}\n                     onClick={() => store.editProfile = !store.editProfile}>\n                    <FontAwesomeIcon color={Colors.veronica} size={'lg'} icon={faUserCog}/></div></nav>*/}\n{/*            <Tabs name=\"tabs1\"\n                  defaultFocus={true}\n            >\n                <TabList>\n                    <Tab>\n                        <div className={'px-3'}>\n                            <FontAwesomeIcon className={'mr-2'} color={Colors.veronica}\n                                             icon={faHome} size={'2x'}/>\n                            Home\n                        </div>\n                    </Tab>\n                    <Tab>\n                        <div className={'px-3'}>\n                            <FontAwesomeIcon className={'mr-2'} color={Colors.veronica}\n                                             icon={faStore} size={'2x'}/>\n                            Store\n                        </div>\n                    </Tab>\n                    <Tab>\n                        <div className={'px-3'}>\n                            <FontAwesomeIcon className={'mr-2'} color={Colors.veronica}\n                                             icon={faShoppingCart} size={'2x'}/>\n                            Cart\n                        </div>\n                    </Tab>\n                    <Tab>\n                        <div className={'px-3'}>\n                            <FontAwesomeIcon className={'mr-2'} color={Colors.veronica}\n                                             icon={faInfoCircle} size={'2x'}/>\n                            About\n                        </div>\n                    </Tab>\n                </TabList>\n                <TabPanel><Home/></TabPanel>\n                <TabPanel><Products/></TabPanel>\n                <TabPanel><Cart/></TabPanel>\n                <TabPanel><About/></TabPanel>\n            </Tabs>*/}\n            <Profile showModal={store.editProfile} onLogout={store.onLogout} onClose={store.closeModal}></Profile>\n            {/*            <Modal show={store.editProfile}>\n                <Modal.Header>Profile info</Modal.Header>\n                <Modal.Body>\n                    <button type={\"submit\"} onClick={store.onLogout}>Logout</button>\n                </Modal.Body>\n                <Modal.Footer>This is the footer</Modal.Footer>\n            </Modal>*/}\n        </>\n    )\n})\n\nexport default Dashboard;\n","import {makeAutoObservable} from \"mobx\";\nimport history from \"../utils/history\";\n\nexport default class DashboardStore {\n    public name: string = '';\n    public rollNo: number = 0;\n    public editProfile: boolean = false;\n\n    constructor() {\n        console.log('DashboardStore created')\n        makeAutoObservable(this)\n    }\n\n    onChangeName = (text: string) => {\n        this.name = text\n        console.log(this.name)\n    }\n\n    onChangeRollNo = (value: any) => {\n        this.rollNo = value;\n    }\n\n    onLogout = () => {\n        this.editProfile = false\n        history.push('/login');\n    }\n\n    closeModal = () => {\n        this.editProfile = false;\n    }\n}\n","import React, {FunctionComponent, ReactElement} from \"react\";\n\ninterface ITextInputProps {\n    value?: string;\n    label?: string;\n    onChange?: Function;\n}\n\nconst VeronicaTextInput: FunctionComponent<ITextInputProps> = (props): ReactElement => {\n    return (\n        <div className={'py-1 my-1'}>\n            <table>\n                <tr>\n                    <td style={{minWidth: 90,textAlign: \"right\"}}><span>{props.label || ''}</span></td>\n                    <td style={{minWidth:90,textAlign: \"right\"}}>\n                        <input type={'text'}\n                               className={'ml-2 px-1'}\n                               onChange={(e) => props.onChange && props.onChange(e.target.value)}/>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    )\n}\nexport default VeronicaTextInput;\n","import React, {FunctionComponent, ReactElement} from \"react\";\nimport {useLocation} from 'react-router-dom'\nimport {parse} from \"querystring\";\nimport VeronicaTextInput from \"../../component/VeronicaTextInput\";\nimport LoginStore from \"../../store/LoginStore\";\nimport Colors from \"../../style/colors\";\nimport '../../style/commonStyle.css'\nimport {observer} from \"mobx-react-lite\";\n\nconst store: LoginStore = new LoginStore();\nconst Login: FunctionComponent = observer((props): ReactElement => {\n\n    let location = useLocation();\n    const params = parse(location.search);\n\n    return (\n        <div className={'container'}>\n            <div className=\"col-md-12 d-md-flex vh-100 flex-md-column  mb-5\">\n                <h3\n                    className={'justify-content-center mx-auto flex-md-column pt-5 pb-2'}\n                    style={{'color': Colors.veronica}}>Veronica\n                </h3>\n                <div\n                    className=\"mx-auto border border-secondary rounded p-3 pr-3\"\n                    style={{'borderColor': Colors.lightVeronica}}>\n                    {store.isInvalid && <div className={'text-danger text-right'}>Invalid Data</div>}\n                    <VeronicaTextInput onChange={store.setUserName} label={'Username'}/>\n                    <br/>\n                    <VeronicaTextInput onChange={store.setPassword} label={'Password'}/>\n                    <br/>\n                    <div className={'text-right'}>\n                        <button type={'submit'} className={'mr-4 px-3 border rounded'}\n                                onClick={()=>store.login()}\n                                style={{'backgroundColor': Colors.lightVeronica}}>\n                            <span style={{'color': Colors.white}}>Login</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n})\nexport default Login;\n","import {makeAutoObservable, toJS} from \"mobx\";\nimport history from \"../utils/history\";\n\nexport default class LoginStore {\n    public username: string = '';\n    public password: string = '';\n    public isInvalid: boolean = false;\n    public user:any;\n    public newTestObject:any;\n\n    constructor() {\n        console.log('LoginStore created')\n        makeAutoObservable(this);\n    }\n\n    setUserName = (value: string) => {\n        this.username = value;\n    }\n\n    setPassword = (value: string) => {\n        this.password = value;\n    }\n\n    login = () => {\n         this.user = {\n            'user_name': this.username,\n            'password': this.password\n        }\n        this.newTestObject=Object.assign(this.user);\n        console.log('login---->',toJS(this.user))\n        console.log('newTestObject---->',toJS(this.newTestObject))\n\n        if (this.username.trim() !== '' && this.password.trim() !== '') {\n            console.log('Success')//call api\n            this.isInvalid = false\n            history.push('/');\n        } else {\n            this.isInvalid = true;//todo improve error handling\n            console.log('Failure')//show error msg\n        }\n        console.log(this.username, this.password)\n    }\n\n}\n","import {FunctionComponent, ReactElement} from \"react\";\nimport {parse} from \"query-string\";\n\ninterface IRegisterProps {\n    name: string\n}\n\nconst Register: FunctionComponent<IRegisterProps> = (props): ReactElement => {\n    return <h1>Register Works...{props.name}</h1>;\n}\n\nexport default Register;\n","import {FunctionComponent} from \"react\";\nimport {observer} from \"mobx-react-lite\";\n\nconst Home: FunctionComponent = observer(() => {\n    return <div className={'text-center'}>Home Works</div>\n})\n\nexport default Home;\n","import Dashboard from \"./screens/Dashboard\";\nimport Login from \"./screens/auth/Login\";\nimport Register from \"./screens/auth/Register\";\nimport Splash from \"./screens/Splash\";\nimport Home from \"./screens/tabs/Home\";\nimport Products from \"./screens/tabs/Products\";\nimport ProductDetails from \"./screens/tabs/ProductDetails\";\nimport Cart from \"./screens/tabs/Cart\";\nimport About from \"./screens/tabs/About\";\n\nexport const routes = [\n    {\n        path: '/',\n        component: Home\n    },\n    {\n        path: '/login',\n        component: Login\n    },\n    {\n        path: '/register',\n        component: Register\n    },\n    {\n        path: '/dashboard',\n        component: Dashboard\n    },\n    /*    {\n            path: '/home',\n            component:\n        },*/\n    {\n        path: '/products',\n        component: Products\n    },\n    {\n        path: '/productDetails',\n        component: ProductDetails\n    },\n    {\n        path: '/cart',\n        component: Cart\n    },\n    {\n        path: '/about',\n        component: About\n    }\n\n]\n\n/*export const routes = () => (\n    <Route>\n        <Route exact\npath = \"/sessionstate1\"\ncomponent = {Template1}\n/>\n< Route\nexact\npath = \"/sessionstate2\"\ncomponent = {Template2}\n/>\n< Route\nexact\npath = \"/sessionstate3\"\ncomponent = {Template3}\n/>\n< /Route >\n)*/\n","import {FunctionComponent} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Tab, Tabs, TabList, TabPanel} from 'react-web-tabs';\nimport '../../style/tabsStyle.css'\n\nconst Products: FunctionComponent = observer(() => {\n    function callback(e) {\n        console.log(e);\n    }\n\n    return (\n        <div>\n            <Tabs defaultTab=\"vertical-tab-one\" vertical>\n                <TabList>\n                    <Tab tabFor=\"vertical-tab-one\">Tab 1</Tab>\n                    <Tab tabFor=\"vertical-tab-two\">Tab 2</Tab>\n                    <Tab tabFor=\"vertical-tab-three\">Tab 3</Tab>\n                </TabList>\n\n                <TabPanel tabId=\"vertical-tab-one\">\n                    <p>Tab 1 content</p>\n                </TabPanel>\n\n                <TabPanel tabId=\"vertical-tab-two\">\n                    <p>Tab content</p>\n                </TabPanel>\n\n                <TabPanel tabId=\"vertical-tab-three\">\n                    <p>Tab 3 content</p>\n                </TabPanel>\n            </Tabs>\n        </div>\n    )\n})\n\nexport default Products;\n","import {FunctionComponent} from \"react\";\nimport {observer} from \"mobx-react-lite\";\n\nconst ProductDetails: FunctionComponent = observer(() => {\n    return <div className={'text-center'} >ProductDetails Works</div>\n})\n\nexport default ProductDetails;\n","import {FunctionComponent} from \"react\";\nimport {observer} from \"mobx-react-lite\";\n\nconst Cart: FunctionComponent = observer(() => {\n    return <div className={'text-center'}>Cart Works...!</div>\n})\nexport default Cart;\n","import {FunctionComponent} from \"react\";\nimport {observer} from \"mobx-react-lite\";\n\nconst About: FunctionComponent = observer(() => {\n    return <div className={'text-center'}>About works...!</div>\n})\n\nexport default About;\n","import React, {FunctionComponent, ReactElement, useState} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Profile from \"./Profile\";\nimport {useLocation} from 'react-router-dom'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Colors from \"../style/colors\";\nimport {faUserCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {NavItem} from \"react-bootstrap\";\nimport history from \"../utils/history\";\nimport {faStore} from \"@fortawesome/free-solid-svg-icons/faStore\";\nimport {faInfoCircle} from \"@fortawesome/free-solid-svg-icons/faInfoCircle\";\nimport '../style/commonStyle.css'\nimport {faCartPlus} from \"@fortawesome/free-solid-svg-icons/faCartPlus\";\n\n\nconst NavBar: FunctionComponent = observer((props): ReactElement => {\n    const [showModal, setShowModal] = useState(false);\n    let location = useLocation() || null;\n\n    function handleModal() {\n        setShowModal(!showModal)\n    }\n\n    function onLogout() {\n        history.push('/login');\n    }\n\n    return (\n        <>\n            <Navbar expand=\"lg\" sticky=\"top\" bg=\"light\" variant=\"light\">\n                <Navbar.Brand href=\"/\"><h3\n                    style={{'color': Colors.veronica}}>Veronica\n                </h3></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className={'container-fluid'} activeKey={location?.pathname}>\n                        <Nav.Link href=\"/products\" className={'py-2'}>\n                            <FontAwesomeIcon\n                                className={'mr-2'}\n                                icon={faStore} size={'2x'}\n                            />Store\n                        </Nav.Link>\n                        <Nav.Link href=\"/cart\">\n                            <FontAwesomeIcon\n                                className={'mr-2'}\n                                icon={faCartPlus} size={'2x'}\n                            />Cart\n                        </Nav.Link>\n                        <Nav.Link href=\"/about\">\n                            <FontAwesomeIcon\n                                className={'mr-2'}\n                                icon={faInfoCircle} size={'2x'}\n                            />About\n                        </Nav.Link>\n                        {/*                        <NavDropdown title=\"Other\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider/>\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown>*/}\n                        <NavItem onClick={() => handleModal()} className={'ml-auto'}>\n                            <div className={'pb-2'}>\n                                <FontAwesomeIcon\n                                    size={'2x'} className={'cursor-pointer'}\n                                    color={showModal ? Colors.veronica : Colors.gray}\n                                    icon={faUserCog}\n                                />\n                            </div>\n                        </NavItem>\n                    </Nav>\n\n                </Navbar.Collapse>\n            </Navbar>\n            <Profile showModal={showModal} onLogout={onLogout} onClose={handleModal}></Profile>\n        </>\n    )\n})\n\n\nexport default NavBar;\n","import React from 'react';\nimport './App.css';\nimport {routes} from \"./routes\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-web-tabs/dist/react-web-tabs.css\";\n\nimport history from \"./utils/history\";\nimport NavBar from \"./screens/NavBar\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\n\nfunction App() {\n    const routeComponents = routes.map(({path, component}, key) => <Route exact path={path} component={component}\n                                                                          key={key}/>);\n\n    return <Router><NavBar/>{routeComponents}</Router>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}